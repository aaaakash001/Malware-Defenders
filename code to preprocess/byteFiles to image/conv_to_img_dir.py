import os
from math import log
import numpy as np
from PIL import Image

dir_bytesfiles = "byte_files/"
dir_imgsave = "img_files/"

def saveimg(array, name, subdirectory):
    print(name)
    print(array.shape)
    if array.shape[1] != 16:
        assert False
    b = int((array.shape[0] * 16) ** (0.5))
    b = 2 ** (int(log(b) / log(2)) + 1)
    a = int(array.shape[0] * 16 / b)
    print(a, b, array.shape)
    array = array[:int(a * b / 16), :]

    array = np.reshape(array, (a, b))
    im = Image.fromarray(np.uint8(array))

    # Create the corresponding subdirectory structure in the image folder
    img_subdirectory = os.path.join(dir_imgsave, subdirectory)
    os.makedirs(img_subdirectory, exist_ok=True)

    # Save the image with the same subdirectory structure
    im.save(os.path.join(img_subdirectory, os.path.basename(name)[:-6] + '.jpg'), "JPEG")

def process_directory(directory):
    files = os.listdir(directory)
    for x in files:
        path = os.path.join(directory, x)
        if os.path.isdir(path):
            process_directory(path)  # Recursively process subdirectories
        elif x.endswith('.bytes'):
            with open(path, 'rb') as f:
                array = []
                for line in f:
                    xx = line.split()
                    if len(xx) != 17:
                        continue
                    array.append([int(i, 16) if i != b'??' else 0 for i in xx[1:]])
                saveimg(np.array(array), x, os.path.relpath(directory, dir_bytesfiles))
                del array

process_directory(dir_bytesfiles)
